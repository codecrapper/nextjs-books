{"version":3,"file":"static/webpack/static\\development\\pages\\BookPage.js.ee4d118a4c43e9a739fe.hot-update.js","sources":["webpack:///./store.js"],"sourcesContent":["import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nconst exampleInitialState = {\r\n  lastUpdate: 0,\r\n  light: false,\r\n  count: 0\r\n}\r\n\r\nexport const actionTypes = {\r\n  TICK: 'TICK',\r\n  INCREMENT: 'INCREMENT',\r\n  DECREMENT: 'DECREMENT',\r\n  RESET: 'RESET'\r\n}\r\n\r\n// intial state for books\r\n\r\nconst booksInitialState = {\r\n  loading: false,\r\n  booksData: []\r\n}\r\n\r\n// REDUCERS\r\nexport const reducer = (state = exampleInitialState, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.TICK:\r\n      return Object.assign({}, state, {\r\n        lastUpdate: action.ts,\r\n        light: !!action.light\r\n      })\r\n    case actionTypes.INCREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count + 1\r\n      })\r\n    case actionTypes.DECREMENT:\r\n      return Object.assign({}, state, {\r\n        count: state.count - 1\r\n      })\r\n    case actionTypes.RESET:\r\n      return Object.assign({}, state, {\r\n        count: exampleInitialState.count\r\n      })\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// reducer for books\r\nexport const booksReducer = (state = booksInitialState, action) => {\r\n  switch(action.type) {\r\n    case 'FETCH_BOOKS': \r\n      return {\r\n        ...state,\r\n        booksData: [...action.payload]\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// ACTIONS\r\nexport const serverRenderClock = isServer => dispatch => {\r\n  return dispatch({ type: actionTypes.TICK, light: !isServer, ts: Date.now() })\r\n}\r\n\r\nexport const startClock = dispatch => {\r\n  return setInterval(() => {\r\n    dispatch({ type: actionTypes.TICK, light: true, ts: Date.now() })\r\n  }, 1000)\r\n}\r\n\r\nexport const incrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.INCREMENT })\r\n}\r\n\r\nexport const decrementCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.DECREMENT })\r\n}\r\n\r\nexport const resetCount = () => dispatch => {\r\n  return dispatch({ type: actionTypes.RESET })\r\n}\r\n\r\n// FETCH BOOK DATA FROM API ACTION\r\nexport const fetchBooksData = () => async dispatch => {\r\n  let res = await fetch('https://www.googleapis.com/books/v1/volumes?q=python')\r\n  let data = await res.json()\r\n\r\n  return dispatch({ type: 'FETCH_BOOKS', payload: data.items })\r\n}\r\n\r\n// ----------------------------------------------------------------\r\n\r\n// export function initializeStore (initialState = exampleInitialState) {\r\n//   return createStore(\r\n//     reducer,\r\n//     initialState,\r\n//     composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n//   )\r\n// }\r\n\r\nexport function initializeStore (initialState = booksInitialState) {\r\n  return createStore(\r\n    booksReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n  )\r\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AACA;AACA;AACA;AALA;AASA;AACA;AACA;AACA;AAHA;AAMA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AACA;AADA;AACA;AAEA;AACA;AAnBA;AAqBA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAFA;AACA;AAGA;AACA;AAPA;AASA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AAIA;AAAA;AACA;AAAA;AAAA;AACA;AAFA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AACA;AADA;AAAA;AACA;AADA;AAEA;AAFA;AAIA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;;;;A","sourceRoot":""}